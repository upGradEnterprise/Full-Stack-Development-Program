Singleton Design Pattern:
* Single Instantiation of a Class
* Ensures that Only One Instance of the Class exists in the JVM
* Singleton Instance are always Static

Implementation:
* private Constructor
* static Members
* public static Methods which returns the Members of the Class

Singleton Design Pattern Scenario:
* Thread-Safe Singleton (Eager Initialization): 
	* an instance is created at the time of loading the class
	* no thread safety issue if we choose Eager Initialization
* Singleton Violation:
	* if two objects are equal, they must have the same hash code
	* using Reflection to inspect and manipulate objects at runtime 
	  (breaking the singleton behavior)
* Prevent Violation:
	* Lazy Initialization
	* Synchronized Block for getting instance
